services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

  backend:
    image: ghcr.io/zethange/vdeniske:backend-latest
    depends_on:
      - db
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    labels:
      - "traefik.http.routers.vdeniske_backend.rule=Host(`vdeniske.ru`) && PathPrefix(`/api`)"
      - "traefik.http.routers.vdeniske_backend.entrypoints=web"
      - "traefik.http.services.vdeniske_backend.loadbalancer.server.port=3000"
    networks:
      - web
      - default

  frontend:
    image: ghcr.io/zethange/vdeniske:frontend-latest
    depends_on:
      - backend
    labels:
      - "traefik.http.routers.vdeniske_frontend.rule=Host(`vdeniske.ru`)"
      - "traefik.http.routers.vdeniske_frontend.entrypoints=web"
      - "traefik.http.services.vdeniske_frontend.loadbalancer.server.port=80"
    networks:
      - web

volumes:
  postgres_data:

networks:
  web:
    external: true
  default:
